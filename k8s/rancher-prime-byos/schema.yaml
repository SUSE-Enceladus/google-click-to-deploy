x-google-marketplace:
  schemaVersion: v2

  applicationApiVersion: v1beta1

  publishedVersion: "$TAG"
  publishedVersionMetadata:
    releaseNote: >-
      Initial marketplace release.
    releaseTypes:
    - Feature
    recommended: false

  images:
    '':
      properties:
        global.images.rancher_prime_byos.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos
        global.images.rancher_prime_byos.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.rancher_prime_byos.tag:
          type: TAG
          default: $TAG

    rancher:
      properties:
        global.images.rancher.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/rancher
        global.images.rancher.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.rancher.tag:
          type: TAG
          default: $TAG

    shell:
      properties:
        global.images.rancher_postdelete.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/shell
        global.images.rancher_postdelete.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.rancher_postdelete.tag:
          type: TAG
          default: v0.1.21

    mirrored-bci-micro:
      properties:
        global.images.rancher_auditlog.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/mirrored-bci-micro
        global.images.rancher_autitlog.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.rancher_autitlog.tag:
          type: TAG
          default: "15.4.14.3"

    cert-manager-controller:
      properties:
        global.images.cert_manager.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/cert-manager-controller
        global.images.cert_manager.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.cert_manager.tag:
          type: TAG
          default: v1.12.3

    cert-manager-webhook:
      properties:
        global.images.cert_manager_webhook.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/cert-manager-webhook
        global.images.cert_manager_webhook.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.cert_manager_webhook.tag:
          type: TAG
          default: v1.12.3

    cert-manager-cainjector:
      properties:
        global.images.cert_manager_cainjector.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/cert-manager-cainjector
        global.images.cert_manager_cainjector.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.cert_manager_cainjector.tag:
          type: TAG
          default: v1.12.3

    cert-manager-acmesolver:
      properties:
        global.images.cert_manager_acmesolver.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/cert-manager-acmesolver
        global.images.cert_manager_acmesolver.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.cert_manager_acmesolver.tag:
          type: TAG
          default: v1.12.3

    cert-manager-ctl:
      properties:
        global.images.cert_manager_startupapicheck.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/cert-manager-ctl
        global.images.cert_manager_startupapicheck.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.cert_manager_startupapicheck.tag:
          type: TAG
          default: v1.12.3

    controller:
      properties:
        global.images.ingress_nginx_controller.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/controller
        global.images.ingress_nginx_controller.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.ingress_nginx_controller.tag:
          type: TAG
          default: v1.9.0

    kube-webhook-certgen:
      properties:
        global.images.kube_webhook_certgen.image:
          type: REPO_WITHOUT_REGISTRY
          default: rancher-prime-byos/kube_webhook_certgen
        global.images.kube_webhook_certgen.registry:
          type: REGISTRY
          default: $REGISTRY
        global.images.kube_webhook_certgen.tag:
          type: TAG
          default: v20230407

  deployerServiceAccount:
    description: >
      Runs the Rancher cloud installer, setting up the required services.
    roles:
    - type: ClusterRole
      rulesType: CUSTOM
      rules:
      - apiGroups: [""]
        resources: ["applications", "bindings", "componentstatuses", "configmaps", "endpoints", "events", "limitranges", "namespaces", "nodes", "persistentvolumeclaims", "persistentvolumes", "pods", "podtemplates", "replicationcontrollers", "resourcequotas", "secrets", "serviceaccounts", "services"]
        verbs: ["*"]
      - apiGroups: ["acme.cert-manager.io"]
        resources: ["challenges", "orders"]
        verbs: ["*"]
      - apiGroups: ["admissionregistration.k8s.io"]
        resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
        verbs: ["*"]
      - apiGroups: ["apiextensions.k8s.io"]
        resources: ["customresourcedefinitions"]
        verbs: ["*"]
      - apiGroups: ["apiregistration.k8s.io"]
        resources: ["apiservices"]
        verbs: ["*"]
      - apiGroups: ["apps"]
        resources: ["controllerrevisions", "daemonsets", "deployments", "replicasets", "statefulsets"]
        verbs: ["*"]
      - apiGroups: ["authentication.k8s.io"]
        resources: ["tokenreviews"]
        verbs: ["*"]
      - apiGroups: ["authorization.k8s.io"]
        resources: ["localsubjectaccessreviews", "selfsubjectaccessreviews", "selfsubjectrulesreviews", "subjectaccessreviews"]
        verbs: ["*"]
      - apiGroups: ["autoscaling"]
        resources: ["horizontalpodautoscalers"]
        verbs: ["*"]
      - apiGroups: ["batch"]
        resources: ["cronjobs", "jobs"]
        verbs: ["*"]
      - apiGroups: ["catalog.cattle.io"]
        resources: ["apps", "clusterrepos", "operations"]
        verbs: ["*"]
      - apiGroups: ["cert-manager.io"]
        resources: ["certificaterequests", "certificates", "clusterissuers", "issuers"]
        verbs: ["*"]
      - apiGroups: ["certificates.k8s.io"]
        resources: ["certificatesigningrequests"]
        verbs: ["*"]
      - apiGroups: ["cluster.x-k8s.io"]
        resources: ["clusters", "machinedeployments", "machinehealthchecks", "machines", "machinesets"]
        verbs: ["*"]
      - apiGroups: ["coordination.k8s.io"]
        resources: ["leases"]
        verbs: ["*"]
      - apiGroups: ["crd.projectcalico.org"]
        resources: ["bgpconfigurations", "bgppeers", "blockaffinities", "caliconodestatuses", "clusterinformations", "felixconfigurations", "globalnetworkpolicies", "globalnetworksets", "hostendpoints", "ipamblocks", "ipamconfigs", "ipamhandles", "ippools", "ipreservations", "kubecontrollersconfigurations", "networkpolicies", "networksets"]
        verbs: ["*"]
      - apiGroups: ["discovery.k8s.io"]
        resources: ["endpointslices"]
        verbs: ["*"]
      - apiGroups: ["events.k8s.io"]
        resources: ["events"]
        verbs: ["*"]
      - apiGroups: ["fleet.cattle.io"]
        resources: ["bundledeployments", "bundlenamespacemappings", "bundles", "clustergroups", "clusterregistrations", "clusterregistrationtokens", "clusters", "contents", "gitreporestrictions", "gitrepos", "imagescans"]
        verbs: ["*"]
      - apiGroups: ["flowcontrol.apiserver.k8s.io"]
        resources: ["flowschemas", "prioritylevelconfigurations"]
        verbs: ["*"]
      - apiGroups: ["gitjob.cattle.io"]
        resources: ["gitjobs"]
        verbs: ["*"]
      - apiGroups: ["helm.cattle.io"]
        resources: ["helmchartconfigs", "helmcharts"]
        verbs: ["*"]
      - apiGroups: ["k3s.cattle.io"]
        resources: ["addons"]
        verbs: ["*"]
      - apiGroups: ["management.cattle.io"]
        resources: ["apiservices", "authconfigs", "catalogs", "catalogtemplates", "catalogtemplateversions", "clusteralertgroups", "clusteralertrules", "clusteralerts", "clustercatalogs", "clustermonitorgraphs", "clusterregistrationtokens", "clusterroletemplatebindings", "clusters", "clustertemplaterevisions", "clustertemplates", "composeconfigs", "dynamicschemas", "etcdbackups", "features", "fleetworkspaces", "globaldnses", "globaldnsproviders", "globalrolebindings", "globalroles", "groupmembers", "groups", "kontainerdrivers", "managedcharts", "monitormetrics", "multiclusterapprevisions", "multiclusterapps", "nodedrivers", "nodepools", "nodes", "nodetemplates", "notifiers", "podsecurityadmissionconfigurationtemplates", "podsecuritypolicytemplateprojectbindings", "podsecuritypolicytemplates", "preferences", "projectalertgroups", "projectalertrules", "projectalerts", "projectcatalogs", "projectmonitorgraphs", "projectnetworkpolicies", "projectroletemplatebindings", "projects", "rancherusernotifications", "rkeaddons", "rkek8sserviceoptions", "rkek8ssystemimages", "roletemplates", "samltokens", "settings", "templatecontents", "templates", "templateversions", "tokens", "userattributes", "users"]
        verbs: ["*"]
      - apiGroups: ["metrics.k8s.io"]
        resources: ["nodes", "pods"]
        verbs: ["*"]
      - apiGroups: ["monitoring.coreos.com"]
        resources: ["alertmanagers", "prometheuses", "prometheusrules", "servicemonitors"]
        verbs: ["*"]
      - apiGroups: ["networking.k8s.io"]
        resources: ["ingressclasses", "ingresses", "networkpolicies"]
        verbs: ["*"]
      - apiGroups: ["node.k8s.io"]
        resources: ["runtimeclasses"]
        verbs: ["*"]
      - apiGroups: ["policy"]
        resources: ["poddisruptionbudgets"]
        verbs: ["*"]
      - apiGroups: ["policy"]
        resources: ["podsecuritypolicies"]
        verbs: ["*"]
      - apiGroups: ["project.cattle.io"]
        resources: ["apprevisions", "apps"]
        verbs: ["*"]
      - apiGroups: ["provisioning.cattle.io"]
        resources: ["clusters"]
        verbs: ["*"]
      - apiGroups: ["rbac.authorization.k8s.io"]
        resources: ["clusterrolebindings", "clusterroles", "rolebindings", "roles"]
        verbs: ["*"]
      - apiGroups: ["rke-machine-config.cattle.io"]
        resources: ["amazonec2configs", "azureconfigs", "digitaloceanconfigs", "harvesterconfigs", "linodeconfigs", "vmwarevsphereconfigs"]
        verbs: ["*"]
      - apiGroups: ["rke-machine.cattle.io"]
        resources: ["amazonec2machines", "amazonec2machinetemplates", "azuremachines", "azuremachinetemplates", "digitaloceanmachines", "digitaloceanmachinetemplates", "harvestermachines", "harvestermachinetemplates", "linodemachines", "linodemachinetemplates", "vmwarevspheremachines", "vmwarevspheremachinetemplates"]
        verbs: ["*"]
      - apiGroups: ["rke.cattle.io"]
        resources: ["custommachines", "etcdsnapshots", "rkebootstraps", "rkebootstraptemplates", "rkeclusters", "rkecontrolplanes"]
        verbs: ["*"]
      - apiGroups: ["scheduling.k8s.io"]
        resources: ["priorityclasses"]
        verbs: ["*"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["csidrivers", "csinodes", "csistoragecapacities", "storageclasses", "volumeattachments"]
        verbs: ["*"]
      - apiGroups: ["susecloud.net"]
        resources: ["cspadapterusagerecords"]
        verbs: ["*"]
      - apiGroups: ["ui.cattle.io"]
        resources: ["navlinks"]
        verbs: ["*"]


#clusterConstraints:
#  k8sVersion: "<1.27"
#   resources:
#     - replicas: 3
#       requests:
#         cpu: 2000m
#         memory: 8192Mi
#   istio:
#     type: OPTIONAL

properties:
  name:
    type: string
    default: rancher-prime-byos
    x-google-marketplace:
      type: NAME

  namespace:
    type: string
    default: rancher-prime-byos-ns
    x-google-marketplace:
      type: NAMESPACE

  rancherHostname:
    type: string
    default: rancher.my.org

  rancherServerURL:
    type: string
    default: https://rancher.my.org

  rancherReplicas:
    type: integer
    default: 1

  # Rancher will generate the bootstrap password
  #rancherBootstrapPassword:
  #  type: string

  rancherIngressClassName:
    type: string
    default: nginx

required:
- name
- namespace
